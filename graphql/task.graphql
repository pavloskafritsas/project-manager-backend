"The priority of a task."
enum Priority {
    CRITICAL
    HIGH
    NORMAL
    LOW
}

"The status of a task."
enum Status {
    BACKLOG
    CANCELLED
    COMPLETED
    IN_PROGRESS
    TO_DO
}

"Task of a project."
type Task {
    "Unique primary key."
    id: ID!

    "Task's name."
    name: String!

    "Task's description."
    description: String

    "Task's priority."
    priority: Priority!

    "Task's status."
    status: Status!

    "Task's start date."
    start_at: Date

    "Task's end date."
    end_at: Date

    "The ID of the project the task belongs to."
    project_id: ID!

    "The project the task belongs to."
    project: Project! @belongsTo

    "The task's billing."
    billing: Billing @morphOne

    "The time entries of the task."
    timeEntries: [TimeEntry]! @hasMany

    "When the task was created."
    created_at: DateTime!

    "When the task was last updated."
    updated_at: DateTime!
}

input CreateTaskInput {
    name: String! @rules(apply: ["string", "max:255"])
    description: String @rules(apply: ["nullable", "string", "max:65535"])
    status: Status!
    priority: Priority!
    start_at: Date @rules(apply: ["nullable", "date"])
    end_at: Date
        @rules(
            apply: [
                "nullable"
                "prohibited_if:start_at,null"
                "date"
                "after_or_equal:start_at"
            ]
        )
}

input UpdateTaskInput {
    id: ID! @rules(apply: ["exists:tasks,id"])
    name: String @rules(apply: ["string", "max:255"])
    description: String @rules(apply: ["nullable", "string", "max:65535"])
    status: Status
    priority: Priority
    start_at: Date @rules(apply: ["nullable", "date"])
    end_at: Date
        @rules(
            apply: [
                "nullable"
                "prohibited_if:start_at,null"
                "date"
                "after_or_equal:start_at"
            ]
        )
}
